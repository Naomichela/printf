#include <stdarg.h>
#include <unistd.h>

int _printf(const char *format, ...)
{
    va_list args;
    int printed_chars = 0;

    va_start(args, format);

    while (*format)
    {
        if (*format != '%')
        {
            // If the current character is not '%', just print it.
            putchar(*format);
            printed_chars++;
        }
        else
        {
            // Handle format specifiers
            format++; // Move past '%'
            if (*format == 'c')
            {
                // Print a character
                char c = va_arg(args, int); // Character arguments are promoted to int
                putchar(c);
                printed_chars++;
            }
            else if (*format == 's')
            {
                // Print a string
                const char *str = va_arg(args, const char *);
                if (str)
                {
                    while (*str)
                    {
                        putchar(*str);
                        str++;
                        printed_chars++;
                    }
                }
            }
            else if (*format == '%')
            {
                // Print a literal '%'
                putchar('%');
                printed_chars++;
            }
        }

        format++; // Move to the next character in the format string
    }

    va_end(args);

    return printed_chars;
}

int main()
{
    char c = 'A';
    char *str = "Hello, World!";

    int printed = _printf("This is a character: %c\nThis is a string: %s\nThis is a percent sign: %%\n", c, str);

    // The return value 'printed' contains the number of characters printed (excluding the null byte).
    printf("Total characters printed: %d\n", printed);

    return 0;
}

